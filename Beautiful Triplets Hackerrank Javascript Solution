/*
Given a sequence of integers , a triplet  is beautiful if:

Given an increasing sequenc of integers and the value of , count the number of beautiful triplets in the sequence.

For example, the sequence  and . There are three beautiful triplets, by index: . To test the first triplet,  and .

Function Description

Complete the beautifulTriplets function in the editor below. It must return an integer that represents the number of beautiful triplets in the sequence.

beautifulTriplets has the following parameters:

d: an integer
arr: an array of integers, sorted ascending

Sample Input

7 3
1 2 4 5 7 8 10
Sample Output

3
*/

function beautifulTriplets(d, arr) {
    let begin = 0;
    let end = 1;
    let middleNum = 0;
    let count = 0;
    while(begin < arr.length){
        while((Math.abs(arr[end]-arr[begin]) != d) && (end < arr.length)){
            end +=1
        }
        if(Math.abs(arr[end]-arr[begin]) === d){
            middleNum = end;
            end +=1
            while((Math.abs(arr[end]-arr[middleNum]) != d) && (end < arr.length)){
            end +=1
            }
            if (Math.abs(arr[end]-arr[middleNum])=== d){
                count += 1
            }
        
    }
    begin += 1
    end = begin + 1
    

    }
    return count

}
